---
title: Dev Blueprints
jupyter:
  jupytext:
    text_representation:
      extension: .qmd
      format_name: quarto
      format_version: '1.0'
      jupytext_version: 1.14.5
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
---

```{python}
from quartodoc import blueprint, collect, preview
from quartodoc import MdRenderer
from quartodoc import layout
import yaml
```


## Blueprint: a renderable doc recipe

### Auto discovery of functions, classes, and more

```{python}
auto = layout.Auto(name = "quartodoc.get_object")
auto
```

* auto just represents what we want to do, blueprint has all the logic.

```{python}
doc = blueprint(auto)
doc
```

```{python}
preview(doc.obj.docstring)
```

### Sections and Pages


## Collect: fetch all pages and items


```{python}
some_page = layout.Page(path = "some_doc_page", contents = [doc])
pages, items = collect(some_page, "reference")
```

```{python}
preview(
    bp2:= blueprint(layout.Auto(name = "quartodoc.MdRenderer", children = "separate")),
    max_depth=2
)

pages, items = collect(layout.Page(path = "APLACE", contents = [bp2]), "reference")

items
```

```{python}
quartodoc_cfg = yaml.safe_load(open("../_quarto.yml"))["quartodoc"]
top = layout.Layout(**quartodoc_cfg)

bp = blueprint(top)
pages, items = collect(bp, "reference")

renderer = MdRenderer()
print(renderer.render(pages[0]))
```

* collect should error if it hits an Auto element ("hey be sure to use blueprint")